name: Build C2EO

on:
  push:
    branches:
      - master

  schedule:
    - cron:  '0 23 * * *'

jobs:

  cpp-lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install cpplint
        run: sudo pip install cpplint

      - name: Cpp-lint
        run: cpplint --filter=-runtime/references,-runtime/string,-build/c++11 project/src/transpiler/** 

  clang-format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Clang-format
        uses: jidicula/clang-format-action@v4.6.2
        with:
          clang-format-version: '13'
          check-path: 'project/src/transpiler'
          fallback-style: 'Google'

  clang-tidy:
    needs:
      - cpp-lint
      - clang-format
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: llvm-clang.tar.gz
          key: ${{ runner.os }}-llvm-clang

      - name: Unpack LLVM
        run: |
          sudo chmod ugo+rwx llvm-clang.tar.gz
          tar -xvf llvm-clang.tar.gz -C ~ > /dev/null
          mv ~/llvm-clang .
      
      - name: Install clang-tidy
        run: sudo apt install clang-tidy
      
      - name: Clang-tidy
        run: |
          cd ./project/scripts
          python3 clang_tidy.py

  gcc-c-torture:
    needs:
      - cpp-lint
      - clang-format
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: llvm-clang.tar.gz
          key: ${{ runner.os }}-llvm-clang

      - name: Unpack LLVM
        run: |
          sudo chmod ugo+rwx llvm-clang.tar.gz
          tar -xvf llvm-clang.tar.gz -C ~ > /dev/null
          mv ~/llvm-clang .

      - name: Download gcc.c-torture
        uses: robinraju/release-downloader@v1.4
        with:
          repository: "polystat/c2eo"
          tag: "v0.1.16"
          fileName: "c-testcuite.tar.gz"

      - name: Unpack gcc.c-torture
        run: |
          sudo chmod ugo+rwx llvm-clang.tar.gz
          tar -xvf gcc.c-torture.tar.gz -C . > /dev/null  

      - name: Parsing
        run: |
          cd ./project/scripts
          python3 transpile.py ../../gcc.c-torture -s gcc -n

  c-testcuite:
    needs:
      - cpp-lint
      - clang-format
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: llvm-clang.tar.gz
          key: ${{ runner.os }}-llvm-clang

      - name: Unpack LLVM
        run: |
          sudo chmod ugo+rwx llvm-clang.tar.gz
          tar -xvf llvm-clang.tar.gz -C ~ > /dev/null
          mv ~/llvm-clang .

      - name: Download gcc.c-torture
        uses: robinraju/release-downloader@v1.4
        with:
          repository: "polystat/c2eo"
          tag: "v0.1.16"
          fileName: "c-testcuite.tar.gz"                                                                                                                             ok  6m 3s  14:16:34 

      - name: Unpack gcc.c-torture
        run: |
          sudo chmod ugo+rwx llvm-clang.tar.gz
          tar -xvf c-testcuite.tar.gz -C . > /dev/null  

      - name: Compilation
        run: |
          cd ./project/scripts
          python3 compile.py -p ../../c-testcuite -s testcuite

  test:
    needs:
      - cpp-lint
      - clang-format
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: llvm-clang.tar.gz
          key: ${{ runner.os }}-llvm-clang

      - name: Unpack LLVM
        run: |
          sudo chmod ugo+rwx llvm-clang.tar.gz
          tar -xvf llvm-clang.tar.gz -C ~ > /dev/null
          mv ~/llvm-clang .
          
      - name: Testing
        run: |
          cd ./project/scripts
          python3 test.py -s test
